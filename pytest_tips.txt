если мы не передали никакого аргумента в команду, а написали просто pytest, тест-раннер начнёт поиск в текущей директории
как аргумент можно передать файл, путь к директории или любую комбинацию директорий и файлов
дальше происходит рекурсивный поиск: то есть PyTest обойдет все вложенные директории
во всех директориях PyTest ищет файлы, которые удовлетворяют правилу  test_*.py или *_test.py (то есть начинаются на test_ или заканчиваются _test и имеют расширение .py)
внутри всех этих файлов находит тестовые функции по следующему правилу:
все тесты, название которых начинается с test, которые находятся вне классов
все тесты, название которых начинается с test внутри классов, имя которых начинается с Test (и без метода __init__ внутри класса)

Ключи:
--------
Если запустить PyTest с параметром -v (verbose, то есть подробный), то в отчёт добавится дополнительная информация со списком тестов и статусом их прохождения.

-m - маркировка (запускать только определённые тесты)
-s - shortcut for --capture=no (чтобы были видны результаты print)
--tb=line - указывает, что нужно выводить только одну строку из лога каждого упавшего теста

Параметризация:
----------------
@pytest.mark.parametrize()

В @pytest.mark.parametrize() нужно передать параметр, который должен изменяться, и список значений параметра. В самом тесте наш параметр тоже нужно передавать в качестве аргумента. 

Например - 
@pytest.mark.parametrize('language', ["ru", "en-gb"]) 
link = "http://selenium1py.pythonanywhere.com/{}/".format(language)